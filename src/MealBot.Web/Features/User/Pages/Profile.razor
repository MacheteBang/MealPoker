@page "/profile/"
@page "/profile/join-family/{familyCode}"
@attribute [Authorize]
@inject UserAuthenticationStateProvider _userAuthenticationStateProvider
@inject IBrowserStorageService _browserStorageService
@inject IUserService _userService
@inject IFamilyService _familyService
@inject IJSRuntime _jsRuntime

<PageTitle>Profile</PageTitle>

<div class="row align-items-middle">
    <div class="col-auto">
        <img src='@($"{_userAuthenticationStateProvider.CurrentUser.PictureUri}?width=64")' style="border-radius:50%"
            alt="@(_userAuthenticationStateProvider.CurrentUser.FirstName + ' ' + _userAuthenticationStateProvider.CurrentUser.LastName)" />
    </div>
    <div class="col">
        <span class="display-5 fw-bold">
            @(_userAuthenticationStateProvider.CurrentUser.FirstName + ' ' +
                _userAuthenticationStateProvider.CurrentUser.LastName)
        </span>
    </div>
</div>

<div class="mb-3">
    @if (_userResponse.IsProcessing)
    {
        <p>Loading User Profile...</p>
    }
    else
    {
        if (_userResponse.IsError)
        {
            <p class="text-center text-danger">There was an error retrieving the user profile.</p>
        }
        else
        {
            <div class="mt-4">
                <Section Title="My Family">
                    <AddEditFamily FamilyId="@_userResponse.Value.FamilyId"
                        OnCreateFamily="async () => await LoadUser(CancellationToken.None)"
                        OnLeaveFamily="async () => await LoadUser(CancellationToken.None)"
                        OnJoinFamily="async () => await LoadUser(CancellationToken.None)" JoinFamilyCode="@FamilyCode" />
                </Section>
            </div>
        }
    }
</div>

<div class="text-center mt-4 pt-4">
    <a class="btn btn-danger px-5" href="signout">Sign Out</a>
</div>

<hr class="mt-5">
<Section Title="For Developers">
    <div class="row align-items-middle">
        <div class="col">
            <span class="fw-bold">Current Access Token</span>
            <div class="text-muted @displayCopySuccessCss">Copied!</div>
        </div>
        <div class="col-auto">
            <button class="btn btn-primary" @onclick="CopyAccessTokenToClipboard">
                <i class="fa-regular fa-copy"></i>
            </button>
        </div>
    </div>

    <div id="accessTokenText" class="p-2 font-monospace bg-light text-break border">
        @_accessToken
    </div>
</Section>



@code
{
    [Parameter] public string? FamilyCode { get; set; }

    private bool _isBusy_User = true;

    private string _accessToken = string.Empty;
    private ApiResult<UserResponse> _userResponse = new();
    private FamilyResponse? _familyResponse;

    protected override async Task OnInitializedAsync()
    {
        _accessToken = await _browserStorageService.GetAccessTokenAsync();
        await LoadUser(CancellationToken.None);
        await _userAuthenticationStateProvider.GetAuthenticationStateAsync();
    }

    private async Task LoadUser(CancellationToken cancellationToken)
    {
        _userResponse = await _userService.GetUserAsync(cancellationToken);
        StateHasChanged();
    }


    private string displayCopySuccessCss = "d-none";

    private async Task CopyAccessTokenToClipboard()
    {
        await _jsRuntime.InvokeVoidAsync("copyTextInElement", "accessTokenText");
        displayCopySuccessCss = "";
    }
}