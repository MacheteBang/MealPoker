@page "/meals/add"
@layout ItemLayout
@attribute [Authorize]
@inject IMealService _mealService
@inject NavigationManager NavigationManager

<PageTitle>Add Meal</PageTitle>
<form method="post" @onsubmit="Submit">
    <div class="sticky-top bg-body pt-4">
        <div class="row">
            <div class="col">
                <h1>Add Meal</h1>
                <p class="text-muted">Create a new meal to share with your friends and family.</p>
            </div>
            <div class="col-auto position-relative" style="cursor:pointer">
                <a class="stretched-link" onclick="history.back();">
                    <i class="fa-solid fa-xmark fa-2xl"></i>
                </a>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <InputText @bind-Value="@Model.Name" class="form-control form-control-lg" id="nameInput"
                    placeholder="Meal Name" required />
                @if (!_showDescription)
                {
                    <div class="col text-end">
                        <a class="link-info fst-italic" style="cursor:pointer" @onclick="() => _showDescription = true">Add
                            Description...</a>
                    </div>
                }
                else
                {
                    <div class="mt-2">
                        <InputTextArea @bind-Value="@Model.Description" class="form-control" id="descriptionInput"
                            placeholder="Description" />
                    </div>
                }
            </div>
            <div class="col-auto">
                <button type="submit" class="btn btn-primary" disabled="@_isSubmitting">
                    <i class="fa-solid fa-floppy-disk"></i>
                    <span class="ms-2 d-none d-md-inline">Save Meal</span>
                </button>
            </div>

        </div>
    </div>
    <div class="row">

    </div>
    <div class="row mt-4">
        <div class="col">
            <h2>Dishes</h2>
            <div class="text-muted">
                Dishes are the different parts of the meal. Add the main course, side dishes, and even dessert!
            </div>
        </div>
    </div>
    <div class="mt-2">
        @if (Model.Parts.Count == 0)
        {
            <div class="border rounded py-5 text-center text-muted">
                <a class="btn btn-primary" @onclick="AddPart">
                    <i class="fa-solid fa-circle-plus fa-2xl"></i>
                    <span class="ms-2">Add Dish</span>
                </a>
            </div>
        }

        @foreach (var part in Model.Parts)
        {
            <div class="row align-items-center">
                <div class="col">
                    <InputText @bind-Value="@part.Name" id="@($"dishName{Model.Parts.IndexOf(part)}Input")"
                        class="form-control" required placeholder="Dish Name" />
                </div>
                <div class="col-auto">
                    <button type="submit" class="btn btn-danger" @onclick="() => RemovePart(part)">
                        <i class="fa-solid fa-trash-can"></i>
                        <span class="ms-2 d-none d-md-inline">Delete</span>
                    </button>
                </div>
            </div>
            <div class="row mt-2">
                <div class="col">
                    <InputTextArea @bind-Value="@part.Description"
                        id="@($"dishDescription{Model.Parts.IndexOf(part)}Input")" class="form-control"
                        placeholder="Description (optional)" />
                </div>
            </div>
            <div class="row mt-2">
                <div class="col-auto">
                    <InputSelect @bind-Value="@part.Category" id="@($"dishCategory{Model.Parts.IndexOf(part)}Input")"
                        class="form-select" aria-label="Dish Category" required>
                        @foreach (var category in MealPartCategories)
                        {
                            <option value="@category">
                                @_mealService.GetEmojiForCategory(category)
                                @category.ToString()
                            </option>
                        }
                    </InputSelect>
                </div>
                <div class="col">
                    <InputText @bind-Value="@part.Url" id="@($"dishUrl{Model.Parts.IndexOf(part)}Input")"
                        class="form-control" placeholder="Link to Recipe (optional" />
                </div>
            </div>
            <hr class="my-4">
        }
        @if (Model.Parts.Count > 0)
        {
            <div class="mt-2 text-center">
                <a class="btn btn-primary" @onclick="AddPart">
                    <i class="fa-solid fa-circle-plus fa-2xl"></i>
                    <span class="ms-2">Add Dish</span>
                </a>
            </div>
        }
    </div>
</form>

@code
{
    [SupplyParameterFromForm] public required MealFormModel Model { get; set; }

    private bool _showDescription = false;
    private bool _isSubmitting = false;

    private IEnumerable<MealPartCategory> MealPartCategories => Enum
    .GetValues<MealPartCategory>()
    .Cast<MealPartCategory>();

    protected override void OnInitialized() => Model ??= new MealFormModel { Name = "" };
    private void AddPart() => Model!.Parts.Add(new MealFormModel.MealPartFormModel());
    private void RemovePart(MealFormModel.MealPartFormModel part) => Model!.Parts.Remove(part);

    private async Task Submit()
    {
        _isSubmitting = true;

        var mealRequest = new CreateMealRequest(
        Model.Name,
        Model.Description,
        Model.Parts.Select(p => new MealPart
            {
                Category = p.Category,
                Name = p.Name,
                Description = p.Description,
                Url = p.Url
            }).ToList()
        );

        await _mealService.AddMealAsync(mealRequest, CancellationToken.None);

        NavigationManager.NavigateTo("/meals");

        _isSubmitting = false;
    }
}