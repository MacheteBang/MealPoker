@page "/meals"
@attribute [Authorize]
@inject IMealService _mealService

<PageTitle>Meals</PageTitle>

<div class="row">
    <div class="col">
        <h1>Meals</h1>
    </div>
    <div class="col-auto ms-auto">
        <NavLink class="btn btn-primary" href="/meals/add">Add Meal</NavLink>
    </div>
</div>
@if (_mealsResponse.IsProcessing)
{
    <p>Loading Meals...</p>
}
else if (_mealsResponse.IsError)
{
    <p class="text-center text-danger">Error loading meals...</p>
}
else
{
    foreach (var meal in _mealsResponse.Value)
    {
        <div class="pb-2">
            <MealRow Meal="@meal" OnDelete="HandleDelete" />
        </div>
    }
}


@code {
    private ApiResult<List<MealResponse>> _mealsResponse = new();
    private ApiResult<bool> _deleteMealResponse = new();

    protected override async Task OnInitializedAsync()
    {
        _mealsResponse = await _mealService.GetMealsAsync(CancellationToken.None);
    }

    private async Task HandleDelete(MealResponse meal)
    {
        if (_mealsResponse.HasValue)
        {
            _mealsResponse.Value.Remove(meal);
            _deleteMealResponse = await _mealService.DeleteMealAsync(meal.MealId, CancellationToken.None);
        }
    }
}